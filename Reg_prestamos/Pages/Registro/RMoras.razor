@page "/Moras"

@inject IToastService Toast

<EditForm Model="mora" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="container">
            <div class="card-header">
                <h2>Registro de Moras</h2>
            </div>

            <div class="card-body">
                <form>
                    <div class="form-group">
                        <label> MoraId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="mora.MorasId" class="form-control col-4" />
                            <div class="input-group-append" display: inline-block>
                                <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar"> Buscar
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Fecha Mora</label>
                        <InputDate @bind-Value="mora.Fecha" class="form-control" />
                        <ValidationMessage For="@(() => mora.Fecha)" />
                    </div>

                    <div class="form-group">
                        <label>PrestamosId</label>
                        <select @bind="PrestamoSeleccionado" class="form-control">
                            <option value="0" disabled selected>Seleccione un prestamo</option>
                            @foreach (var item in ListaPrestamo)
                            {
                                @((prestamo) = PrestamosBLL.Buscar(item.PrestamoID));
                                @((persona) = PersonasBLL.Buscar(prestamo.PersonasID));
                                <option value="@prestamo.PrestamoID">Prestamo Id: @prestamo.PrestamoID - Cliente: @persona.Nombre</option>
                            }
                        </select>
                        <p />
                        <div class="input-group">
                            <label>Valor:</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="ValorM" class="form-control col-4" />
                                <div class="input-group-append" display: inline-block>
                                    <button type="button" class="btn btn-primary input-group-text" @onclick="Agregar"> Agregar
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="table-responsive text-nowrap" style="position: relative; height:200px; overflow: auto; display: block;">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Id:</th>
                                    <th>Cliente:</th>
                                    <th>Valor:</th>
                                </tr>
                            </thead>

                            <tbody class="text-body">
                                @foreach (var item in mora.Detalle)
                                {
                                <tr>
                                    <td>@item.Id</td>
                                    <td>@item.MorasName</td>
                                    <td>@item.Valor</td>
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <label class="form-control">Monto Total: @mora.Total</label>
                </form>
            </div>

            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                        <i class="oi oi-file mr-2" />Nuevo
                    </button>
                    <button type="submit" class="btn btn-lg btn-success">
                        <i class="oi oi-account-login" style="transform:rotate(90deg)" /> Guardar
                    </button>
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                        <i class="oi oi-trash mr-2" />Eliminar
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code
{
    public Moras mora = new Moras();

    public string Nombre { get; set; }
    Persona persona = new Persona();

    Prestamos prestamo = new Prestamos();
    public int PrestamoID { get; set; }
    public int PrestamoSeleccionado { get; set; }
    public decimal ValorM { get; set; }
    List<Prestamos> ListaPrestamo = new List<Prestamos>();


    protected override void OnInitialized()
    {
        Nuevo();
    }

    public void Nuevo()
    {
        mora = new Moras();
        PrestamoSeleccionado = 0;
        ListaPrestamo = PrestamosBLL.GetList(c => true);
    }

    private void Actualizar()
    {
        PrestamoSeleccionado = 0;
        ValorM = 0;
    }
    public void Buscar()
    {
        if (mora.MorasId > 0)
        {
            var Mora = MorasBLL.Buscar(mora.MorasId);

            if (Mora != null)
                this.mora = Mora;
            else
            {
                Toast.ShowError("Mora no encontrada");
                Nuevo();
            }
        }
        else
            Toast.ShowWarning("Debe ingresar un Id para buscar");
    }

    public void Agregar()
    {
        var prestamo = PrestamosBLL.Buscar(PrestamoSeleccionado);
        var Persona = PersonasBLL.Buscar(prestamo.PersonasID);

        bool existe = false;

        foreach (var item in mora.Detalle)
        {
            if (item.PrestamosId == PrestamoSeleccionado)
            {
                existe = true;
                break;
            }
            else
                existe = false;
        }

        if (existe == false)
        {
            mora.Detalle.Add(new MorasDetalle { MorasId = mora.MorasId, PrestamosId = PrestamoSeleccionado, MorasName = Persona.Nombre, Valor = ValorM });
            mora.Total += ValorM;
            Persona.Balance += ValorM;
            PersonasBLL.Guardar(Persona);
            Actualizar();
        }
        else
            Toast.ShowError("Prestamo ya tiene una mora");
    }

    public void Guardar()
    {
        bool Guardado;

        Guardado = MorasBLL.Guardar(mora);

        if (Guardado)
        {
            Nuevo();
            Toast.ShowSuccess("Guardado correctamente");
        }
        else
            Toast.ShowError("No fue posible guardar");
    }

    public void Eliminar()
    {
        bool Eliminado = false;

        var Buscado = MorasBLL.Buscar(mora.MorasId);

        if (Buscado != null)
        {
            foreach (var item in mora.Detalle)
            {
                var Prestamo = PrestamosBLL.Buscar(item.PrestamosId);
                var persona = PersonasBLL.Buscar(Prestamo.PersonasID);

                persona.Balance -= item.Valor;

                PersonasBLL.Guardar(persona);
            }

            Eliminado = MorasBLL.Eliminar(mora.MorasId);

            if (Eliminado)
            {
                Nuevo();
                Toast.ShowSuccess("Eliminado correctamente");
            }
            else
                Toast.ShowError("No fue posible eliminar");
        }
        else
            Toast.ShowError("Mora no existes");

    }
}